package Player;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.Socket;



public class Player implements Runnable {
	BufferedWriter out;	
	public Socket ps;
	private Queue queue;
	private BufferedReader in;
	public static final int PORT = 6000;
	
	public static void main(String[] args){
//		Player p = new Player();
//		try{
//			p.ps = new Socket("127.0.0.1",PORT);
////			Thread.sleep(200);
//			out = new BufferedWriter(new OutputStreamWriter(p.ps.getOutputStream()));
////			out.write();
//			out.flush();
//			
////			Thread.sleep(5000);
//			p.ps.close();
//		}
//		catch(IOException ioe){
//			System.err.println(ioe.getMessage());
//		}
//		catch(InterruptedException ie)
//		{
//			ie.printStackTrace();
//		}
	}
	
	public void run(){
		while(true){
			receiveCard();
		}
	}
	
	public Player(String address,Queue q)
	{
		try{
			ps = new Socket("127.0.0.1",PORT);
//			Thread.sleep(200);
			out = new BufferedWriter(new OutputStreamWriter(ps.getOutputStream()));			
			in = new BufferedReader(new InputStreamReader(ps.getInputStream()));
			//out.write();
			out.flush();
			queue = q;
			for(int i=0; i<10; i++){
				sendMessage("rCard");
				Thread.sleep(200);
				receiveCard();
			}
			new Thread(this).start();
		}
		catch(IOException ioe){
			System.err.println(ioe.getMessage());
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println(" Error. Interrupted. ");
		}
		
		
		
		
	}
	public void receiveCard(){
		try{
			String s = in.readLine();
			Card c = new Card(s);
			queue.addCard(c);
			
		}
		catch(IOException ioe)
		{
			System.err.println(ioe.getMessage());
		}
		
		//return null;
	}
	public void sendMessage(String message)
	{
		try
		{
			out.write(message);
			out.newLine();
			out.flush();
		}
		catch(IOException ioe)
		{
			System.err.println(ioe.getMessage());
		}
	}
}
